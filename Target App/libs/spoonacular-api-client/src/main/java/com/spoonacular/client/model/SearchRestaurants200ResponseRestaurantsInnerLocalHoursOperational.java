/**
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.spoonacular.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational {
  
  @SerializedName("Monday")
  private String monday = null;
  @SerializedName("Tuesday")
  private String tuesday = null;
  @SerializedName("Wednesday")
  private String wednesday = null;
  @SerializedName("Thursday")
  private String thursday = null;
  @SerializedName("Friday")
  private String friday = null;
  @SerializedName("Saturday")
  private String saturday = null;
  @SerializedName("Sunday")
  private String sunday = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMonday() {
    return monday;
  }
  public void setMonday(String monday) {
    this.monday = monday;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTuesday() {
    return tuesday;
  }
  public void setTuesday(String tuesday) {
    this.tuesday = tuesday;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getWednesday() {
    return wednesday;
  }
  public void setWednesday(String wednesday) {
    this.wednesday = wednesday;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getThursday() {
    return thursday;
  }
  public void setThursday(String thursday) {
    this.thursday = thursday;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getFriday() {
    return friday;
  }
  public void setFriday(String friday) {
    this.friday = friday;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSaturday() {
    return saturday;
  }
  public void setSaturday(String saturday) {
    this.saturday = saturday;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSunday() {
    return sunday;
  }
  public void setSunday(String sunday) {
    this.sunday = sunday;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational = (SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational) o;
    return (this.monday == null ? searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.monday == null : this.monday.equals(searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.monday)) &&
        (this.tuesday == null ? searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.tuesday == null : this.tuesday.equals(searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.tuesday)) &&
        (this.wednesday == null ? searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.wednesday == null : this.wednesday.equals(searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.wednesday)) &&
        (this.thursday == null ? searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.thursday == null : this.thursday.equals(searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.thursday)) &&
        (this.friday == null ? searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.friday == null : this.friday.equals(searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.friday)) &&
        (this.saturday == null ? searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.saturday == null : this.saturday.equals(searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.saturday)) &&
        (this.sunday == null ? searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.sunday == null : this.sunday.equals(searchRestaurants200ResponseRestaurantsInnerLocalHoursOperational.sunday));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.monday == null ? 0: this.monday.hashCode());
    result = 31 * result + (this.tuesday == null ? 0: this.tuesday.hashCode());
    result = 31 * result + (this.wednesday == null ? 0: this.wednesday.hashCode());
    result = 31 * result + (this.thursday == null ? 0: this.thursday.hashCode());
    result = 31 * result + (this.friday == null ? 0: this.friday.hashCode());
    result = 31 * result + (this.saturday == null ? 0: this.saturday.hashCode());
    result = 31 * result + (this.sunday == null ? 0: this.sunday.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchRestaurants200ResponseRestaurantsInnerLocalHoursOperational {\n");
    
    sb.append("  monday: ").append(monday).append("\n");
    sb.append("  tuesday: ").append(tuesday).append("\n");
    sb.append("  wednesday: ").append(wednesday).append("\n");
    sb.append("  thursday: ").append(thursday).append("\n");
    sb.append("  friday: ").append(friday).append("\n");
    sb.append("  saturday: ").append(saturday).append("\n");
    sb.append("  sunday: ").append(sunday).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
